name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: Build backend
        run: |
          mvn clean package spring-boot:repackage -Dmaven.test.skip=true

      - name: Create SSH private key file
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > LightsailDefaultKey-us-east-1.pem
          chmod 600 LightsailDefaultKey-us-east-1.pem

      - name: Add AWS Lightsail host key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 3.87.57.137 >> ~/.ssh/known_hosts

      - name: Deploy backend to AWS Lightsail
        run: |
          # Remove the old JAR file if it exists
          ssh -i LightsailDefaultKey-us-east-1.pem ubuntu@3.87.57.137 << 'EOF'
            rm -f /home/ubuntu/portfolio-website-0.0.1-SNAPSHOT.jar
          EOF
          
          # Copy the new JAR file to the AWS Lightsail instance
          scp -i LightsailDefaultKey-us-east-1.pem "target/portfolio-website-0.0.1-SNAPSHOT.jar" ubuntu@3.87.57.137:/home/ubuntu/
          
          # Connect to the AWS Lightsail instance and manage the backend
          ssh -i LightsailDefaultKey-us-east-1.pem ubuntu@3.87.57.137 << 'EOF'
            # Stop the running JAR if it exists
            pkill -f 'java -jar portfolio-website-0.0.1-SNAPSHOT.jar' || true
          
            # Start the new JAR in the background
            nohup java -jar /home/ubuntu/portfolio-website-0.0.1-SNAPSHOT.jar > /home/ubuntu/portfolio-website.log 2>&1 &
          EOF

  frontend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: portfolio-website-react-app
        run: npm install

      - name: Build frontend
        working-directory: portfolio-website-react-app
        run: npm run build

      - name: Start frontend server
        working-directory: portfolio-website-react-app
        run: npm run dev &

      - name: Wait for frontend server to be ready
        run: npx wait-on http://localhost:5173

      - name: Install Playwright Browsers
        working-directory: portfolio-website-react-app
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: portfolio-website-react-app
        run: npm run test